<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.checkthelogs.musicservice</groupId>
    <artifactId>music-service</artifactId>
    <version>1.0-SNAPSHOT</version>
    <build>
        <finalName>music-service</finalName>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.6.0</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>

            <!--Make an executable fat jar using the shade plugin-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>2.4.3</version>
                <configuration>
                    <transformers>
                        <transformer
                                implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                            <mainClass>com.checkthelogs.musicservice.MusicService</mainClass>
                        </transformer>
                    </transformers>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.19.1</version>
                <configuration>

                    <!--Let the tests know the app host and app port values (generated by the docker plugin)-->
                    <systemProperties>
                        <app.host>${app.host}</app.host>
                        <app.port>${app.port}</app.port>
                    </systemProperties>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.18.1</version>
                <executions>

                    <!--Create any docker images at the package phase-->
                    <execution>
                        <id>build-docker-images</id>
                        <phase>package</phase>
                        <goals>
                            <goal>build</goal>
                        </goals>
                    </execution>

                    <!--Start up the docker containers before our functional tests-->
                    <execution>
                        <id>start-docker-containers</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>start</goal>
                        </goals>
                    </execution>

                    <!--Stop and remove the docker containers after our functional tests-->
                    <execution>
                        <id>remove-docker-containers</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>stop</goal>
                            <goal>remove</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <images>
                        <!--Tell the docker plugin to build our application docker image using the Docker file found in
                            src/main/docker/music-service -->
                        <image>
                            <name>checkthelogs/music-service:${project.version}</name>
                            <alias>music-service</alias>
                            <build>
                                <dockerFileDir>music-service</dockerFileDir>
                                <assembly>
                                    <descriptorRef>artifact</descriptorRef>
                                </assembly>
                            </build>
                            <run>
                                <namingStrategy>alias</namingStrategy>
                                <ports>
                                    <port>+app.host:app.port:8080</port>
                                </ports>

                                <!--Wait for our application to be ready by polling the status endpoint until it
                                    returns 200 status code-->
                                <wait>
                                    <http>
                                        <url>http://${app.host}:${app.port}/status</url>
                                        <method>GET</method>
                                        <status>200</status>
                                    </http>
                                    <time>90000</time>
                                </wait>

                                <!--Output application logs to stdout (Good for troubleshooting any startup issues)-->
                                <log>
                                    <enabled>true</enabled>
                                    <prefix>music-service</prefix>
                                    <color>cyan</color>
                                </log>
                            </run>
                        </image>
                    </images>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <dependency>
            <groupId>io.ratpack</groupId>
            <artifactId>ratpack-core</artifactId>
            <version>1.4.4</version>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.mashape.unirest</groupId>
            <artifactId>unirest-java</artifactId>
            <version>1.4.9</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
</project>